{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoguinPage = class LoguinPage {\n  constructor(navCtrl, dataService, fBuilder, http) {\n    this.navCtrl = navCtrl;\n    this.dataService = dataService;\n    this.fBuilder = fBuilder;\n    this.http = http;\n    this.fGroup = this.fBuilder.group({\n      'email': [null, Validators.compose([Validators.required, Validators.pattern(/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/), Validators.minLength(4), Validators.maxLength(100)])],\n      'senha': [null, Validators.compose([Validators.required, Validators.minLength(4), Validators.maxLength(40)])]\n    });\n  }\n  showProfile() {\n    const email = this.fGroup.value.email;\n    const senha = this.fGroup.value.senha;\n    const url = `http://localhost/classes/validationLoguin.php?email=${email}&senha=${senha}`;\n    return this.http.get(url);\n    this.http.get(url).subscribe(data => {\n      data;\n      // Manipule os dados de resposta aqui\n      // console.log(data);\n      // Usuario não encontrado, Email ou Senha invalida!\n      // if (data.status == \"sucess\"){\n      // } else {\n      // }\n    }, error => {\n      // Lide com erros aqui\n      console.error(error);\n    });\n  }\n  ngOnInit() {\n    setTimeout(() => {\n      var _this$fGroup$get, _this$fGroup$get2;\n      (_this$fGroup$get = this.fGroup.get('email')) === null || _this$fGroup$get === void 0 || _this$fGroup$get.setValue('teste@gmail.com');\n      (_this$fGroup$get2 = this.fGroup.get('senha')) === null || _this$fGroup$get2 === void 0 || _this$fGroup$get2.setValue('vascoGanhou');\n    }, 2000);\n  }\n};\nLoguinPage = __decorate([Component({\n  selector: 'app-loguin',\n  templateUrl: './loguin.page.html',\n  styleUrls: ['./loguin.page.scss']\n})], LoguinPage);\nexport { LoguinPage };","map":{"version":3,"names":["Component","Validators","LoguinPage","constructor","navCtrl","dataService","fBuilder","http","fGroup","group","compose","required","pattern","minLength","maxLength","showProfile","email","value","senha","url","get","subscribe","data","error","console","ngOnInit","setTimeout","_this$fGroup$get","_this$fGroup$get2","setValue","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\otavi\\ionic\\testPHPMOIO\\src\\app\\pages\\loguin\\loguin.page.ts"],"sourcesContent":["import { ApiService } from './../../api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { DataService } from 'data.service';\n// import { error } from 'console';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-loguin',\n  templateUrl: './loguin.page.html',\n  styleUrls: ['./loguin.page.scss'],\n})\nexport class LoguinPage implements OnInit {\n  // banco de dados\n  email: any;\n  senha: any;\n\n  //.\n  public fGroup: FormGroup;\n\n  constructor(\n    private navCtrl: NavController,\n    private dataService: DataService,\n    private fBuilder: FormBuilder,\n    private http: HttpClient) {\n    this.fGroup = this.fBuilder.group({\n      'email': [\n        null,\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\n            /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n          ),\n          Validators.minLength(4),\n          Validators.maxLength(100),\n        ]),\n      ],\n      'senha': [\n        null,\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(40),\n        ]),\n      ]\n    });\n  }\n\n  showProfile() {\n    const email = this.fGroup.value.email;\n    const senha = this.fGroup.value.senha;\n    const url = `http://localhost/classes/validationLoguin.php?email=${email}&senha=${senha}`;\n\n    return this.http.get(url);\n\n    this.http.get(url).subscribe(data => {\n      data\n      // Manipule os dados de resposta aqui\n      // console.log(data);\n      // Usuario não encontrado, Email ou Senha invalida!\n\n      // if (data.status == \"sucess\"){\n\n      // } else {\n\n      // }\n    }, error => {\n      // Lide com erros aqui\n      console.error(error);\n    });\n\n  }\n\n  ngOnInit() {\n      setTimeout(()=> {\n      this.fGroup.get('email')?.setValue('teste@gmail.com');\n      this.fGroup.get('senha')?.setValue('vascoGanhou');\n    }, 2000)\n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAWnE,IAAaC,UAAU,GAAvB,MAAaA,UAAU;EAQrBC,YACUC,OAAsB,EACtBC,WAAwB,EACxBC,QAAqB,EACrBC,IAAgB;IAHhB,KAAAH,OAAO,GAAPA,OAAO;IACP,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,IAAI,GAAJA,IAAI;IACZ,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,QAAQ,CAACG,KAAK,CAAC;MAChC,OAAO,EAAE,CACP,IAAI,EACJR,UAAU,CAACS,OAAO,CAAC,CACjBT,UAAU,CAACU,QAAQ,EACnBV,UAAU,CAACW,OAAO,CAChB,uIAAuI,CACxI,EACDX,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,EACvBZ,UAAU,CAACa,SAAS,CAAC,GAAG,CAAC,CAC1B,CAAC,CACH;MACD,OAAO,EAAE,CACP,IAAI,EACJb,UAAU,CAACS,OAAO,CAAC,CACjBT,UAAU,CAACU,QAAQ,EACnBV,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,EACvBZ,UAAU,CAACa,SAAS,CAAC,EAAE,CAAC,CACzB,CAAC;KAEL,CAAC;EACJ;EAEAC,WAAWA,CAAA;IACT,MAAMC,KAAK,GAAG,IAAI,CAACR,MAAM,CAACS,KAAK,CAACD,KAAK;IACrC,MAAME,KAAK,GAAG,IAAI,CAACV,MAAM,CAACS,KAAK,CAACC,KAAK;IACrC,MAAMC,GAAG,GAAG,uDAAuDH,KAAK,UAAUE,KAAK,EAAE;IAEzF,OAAO,IAAI,CAACX,IAAI,CAACa,GAAG,CAACD,GAAG,CAAC;IAEzB,IAAI,CAACZ,IAAI,CAACa,GAAG,CAACD,GAAG,CAAC,CAACE,SAAS,CAACC,IAAI,IAAG;MAClCA,IAAI;MACJ;MACA;MACA;MAEA;MAEA;MAEA;IACF,CAAC,EAAEC,KAAK,IAAG;MACT;MACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EAEJ;EAEAE,QAAQA,CAAA;IACJC,UAAU,CAAC,MAAI;MAAA,IAAAC,gBAAA,EAAAC,iBAAA;MACf,CAAAD,gBAAA,OAAI,CAACnB,MAAM,CAACY,GAAG,CAAC,OAAO,CAAC,cAAAO,gBAAA,eAAxBA,gBAAA,CAA0BE,QAAQ,CAAC,iBAAiB,CAAC;MACrD,CAAAD,iBAAA,OAAI,CAACpB,MAAM,CAACY,GAAG,CAAC,OAAO,CAAC,cAAAQ,iBAAA,eAAxBA,iBAAA,CAA0BC,QAAQ,CAAC,aAAa,CAAC;IACnD,CAAC,EAAE,IAAI,CAAC;EACV;CACD;AAnEY3B,UAAU,GAAA4B,UAAA,EALtB9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,oBAAoB;EACjCC,SAAS,EAAE,CAAC,oBAAoB;CACjC,CAAC,C,EACW/B,UAAU,CAmEtB;SAnEYA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}